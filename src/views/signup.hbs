<!DOCTYPE html>
<html>
<head>
    <title> Sign Up </title>
    <link href="https://fonts.googleapis.com/css?family=Roboto|Rubik&display=swap" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="/css/main.css">
    <link rel="stylesheet" type="text/css" href="/css/signup.css">
</head>
<body>

{{> header}}

<div id="container">
    <div id="content">
        <h1 id="title"> Sign Up. </h1>
        <!-- 
            Form attribute `method`, when set to "post", will send a post request to the same URL as the current page with the contents of the inputfields.
            The request body data is encoded in `urlencoded` (or "application/x-www-form-urlencoded") format.
            As such, the express.urlencoded() middleware (instead of express.json()) must be used to parse the data.
            A custom url can be set by specifying the action attribute. 
            E.g., <form id="signup" action="/register" method="post">
                sends a POST request to the url `/register`

            The alternative is to use the fetch API to send data in the request body:
            1. Uncomment the script element below to use the fetch API approach
            2. Remove the form's method attribute and its value
            3. Edit `/src/routes/signupRouter.js:9` to use `express.json()` instead of `express.urlencoded()`
        -->
        <!-- 
            <script src="/js/signup.js"></script> 
        -->
        <form id="signup" method="post">
            <input type="text" name="fName" id="fName" class="field" placeholder="First Name" required> <br>
            <input type="text" name="lName" id="lName" class="field" placeholder="Last Name" required> <br>
            <input type="number" name="idNum" id="idNum" class="field" placeholder="Id Number" required> <br>
            <input type="password" name="pw" id="pw" class="field" placeholder="Password" required> <br>
            <input type="submit" id="submit" value="SUBMIT">
        </form>
    </div>
</div>

</body>
</html>
